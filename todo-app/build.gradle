plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.diffplug.spotless" version "5.11.1"
    id 'java'
    id "com.gorylenko.gradle-git-properties" version "2.3.2"
}

group = 'com.spring.webflux.todo'
version = '2.0.0'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

sourceSets {
    test {
        java.srcDirs = ['src/test/unit/java/']
    }
    integration {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir 'src/test/integration/java'
        }
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation("com.google.guava:guava:31.1-jre")
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webflux-core' , version: '1.6.9'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webflux-ui' , version: '1.6.9'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.hibernate.validator:hibernate-validator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '3.4.6'

}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

task integration(type: Test) {
    description = 'Runs the integration tests.'
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}
check.dependsOn integration

compileJava.dependsOn 'spotlessApply'

integration {
    environment "AWS_REGION", "eu-west-1"
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

spotless {
    java {
        targetExclude('build/**')
        googleJavaFormat()
    }
}

jar {
    enabled = false
}

springBoot {
    buildInfo()
}
gitProperties {
    keys = ['git.commit.id','git.branch','git.build.user.email','git.build.version']
}
