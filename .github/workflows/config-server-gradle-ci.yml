name: Config Server Gradle Pipeline

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'
env:
  config-server_version : "1.0.0"

jobs:
  checkout:
    name: Checkout
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir app && cp -R ci app && cp -R config-server app
      - uses: actions/upload-artifact@v2
        with:
          name: Checkout
          path: app

  build-config-server:
    name: Build Config Server
    runs-on: ubuntu-latest
    needs: [checkout]
    permissions:
      contents: read
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: Checkout
          path: app
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: temurin
          cache: gradle
      - name: Grant execute permission for gradlew
        working-directory: app/config-server
        run: chmod +x gradlew
      - name: Build with Gradle
        working-directory: app/config-server
        run: ./gradlew build
      - run: |
          mkdir -p artifact/config/gradle && cp app/config-server/build/libs/config-server-${{env.config-server_version}}.jar artifact/config/gradle && cp app/config-server/Dockerfile artifact/config
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: artifact        

  package-config-server-docker:
    name: Package Config Server
    runs-on: ubuntu-latest
    needs: [build-config-server]
    permissions:
      contents: read
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: Package
          path: artifact
      - name: Build local image
        working-directory: artifact/config
        run: |
          docker build --build-arg JAR_FILE=gradle/config-server-${{env.config-server_version}}.jar --tag config-server:${{env.config-server_version}} .
          mkdir -p docker
          docker save config-server:${{env.config-server_version}} > docker/image.tar
      - uses: actions/upload-artifact@v2
        with:
          name: config-server-docker-artifact
          path: artifact/config/docker

  push-docker-image-to-github-registry:
    name: Push to Github package registry
    runs-on: ubuntu-latest
    needs: [ package-config-server-docker ]       
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') && contains(fromJson('["refs/heads/master", "refs/heads/main"]'), github.ref) }}
    steps:
      - name: Download Config Server Docker Image
        uses: actions/download-artifact@v2
        with:
          name: config-server-docker-artifact
          path: artifact/config-server/docker
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGE_USERNAME }}
          password: ${{ secrets.PACKAGE_RWD }}
      - name: Docker image push
        working-directory: artifact
        run: |
          docker load < config-server/docker/image.tar
          
          docker tag config-server:${{env.config-server_version}} ghcr.io/raghav2211/spring-web-flux-todo-app/gradle/config-server:${{env.config-server_version}}
          docker push ghcr.io/raghav2211/spring-web-flux-todo-app/gradle/config-server:${{env.config-server_version}}      