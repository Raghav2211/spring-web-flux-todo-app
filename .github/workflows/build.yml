name: Build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      edge-service_version: "1.0.0"
      todo_version: "2.0.0"
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      # Step that does that actual cache save and restore
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Grant execute permission for gradlew[Edge-Service]
        working-directory: ./edge-service
        run: chmod +x gradlew
      - name: Build with Gradle[Edge-Service]
        working-directory: ./edge-service
        run: ./gradlew build
      - name: Build with Maven[Edge-Service]
        working-directory: ./edge-service
        run: mvn -B package
      - name: Build local image
        working-directory: ./edge-service
        run: |
          docker build --build-arg JAR_FILE=target/edge-service-${{env.edge-service_version}}.jar --tag edge-service:${{env.edge-service_version}} .
          docker build --build-arg JAR_FILE=build/libs/edge-service-${{env.edge-service_version}}.jar --tag edge-service:${{env.edge-service_version}} .
      - name: Grant execute permission for gradlew[Todo-App]
        working-directory: ./todo-app
        run: chmod +x gradlew
      - name: Build with Gradle[Todo-App]
        working-directory: ./todo-app
        run: ./gradlew build
      - name: Build with Maven[Todo-App]
        working-directory: ./todo-app
        run: mvn -B package
      - name: Build local image
        working-directory: ./todo-app
        run: |
          docker build --build-arg JAR_FILE=target/todo-${{env.todo_version}}.jar --tag todo:${{env.todo_version}} .
          docker build --build-arg JAR_FILE=build/libs/todo-${{env.todo_version}}.jar --tag todo:${{env.todo_version}} .
      - name: Build local stack
        run: docker-compose -f ci/docker-compose.yaml up -d
      - name: Test local stack
        run: |
          sleep 120
          docker run --network container:todo appropriate/curl -s --retry 10 --retry-connrefused http://localhost:8080/actuator/health
      - name: Failure Result
        if: ${{ failure() }}
        run: |
          docker logs mongodb
          docker logs todo
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGE_USERNAME }}
          password: ${{ secrets.PACKAGE_RWD }}
      - name: Docker image push
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag todo:${{env.todo_version}} ghcr.io/raghav2211/spring-web-flux-todo-app/todo:${{env.todo_version}}
          docker push ghcr.io/raghav2211/spring-web-flux-todo-app/todo:${{env.todo_version}}
